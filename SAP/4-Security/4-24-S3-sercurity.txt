# Page. 113

===== S3 Encryption for Objects ==========


There are 4 methods of encrypting objects in S3
    SSE-S3: 
        encrypts S3 objects using keys handled & managed by AWS
    SSE-KMS: 
        leverage AWS Key Management Service to manage encryption keys
    SSE-C: 
        when you want to manage your own encryption keys
        which the key can also come from CloudHSM
    Client Side Encryption

Glacier: 
    all data is AES-256 encrypted, key under AWS control



===== Encryption in transit (SSL) ==========
    
AWS S3 exposes:
    HTTP endpoint: non encrypted
    HTTPS endpoint: encryption in flight

You’re free to use the endpoint you want, 
    but HTTPS is recommended

HTTPS is mandatory for SSE-C

Encryption in flight is also called SSL / TLS 


===== Events in S3 Buckets ==========


S3 Access Logs:
    Detailed records for the requests that are made to a bucket
    Might take hours to deliver
    Might be incomplete (best effort)

S3 Events Notifications:
    Receive notifications when certain events happen in your bucket
    E.g.: 
        new objects created, 
        object removal, 
        restore objects, 
        replication events
    Destinations: 
        SNS, 
        SQS queue, 
        Lambda
    Typically delivered in seconds but can take minutes, 
    notification for every object if versioning is enabled, 
    else risk of one notification for two same object write done simultaneously

Trusted Advisor:
    Check the bucket permission (is the bucket public?)

CloudWatch Events:
    Need to enable CloudTrail object level logging on S3 first
    Target can be Lambda, SQS, SNS, etc… 


 ===== S3 access control ==========

User based
    IAM policies 
        - which API calls should be allowed for a specific user from IAM console

Resource Based
    Bucket Policies 
        - bucket wide rules from the S3 console 
        - allows cross account
            which is very helpful since we can give the access to another account without assuming a role
    Object Access Control List (ACL) 
        – finer grain
    Bucket Access Control List (ACL) 
        – less common


===== S3 Bucket Policies ==========

Use S3 bucket for policy to:
    Grant public access to the bucket
    Force objects to be encrypted at upload
    Grant access to another account (Cross Account)

Optional Conditions on:
    Public IP or Elastic IP 
        (not on Private IP)
    Source VPC or Source VPC Endpoint 
        – only works with VPC Endpoints
    CloudFront Origin Identity
    MFA

Examples here: 
https://docs.aws.amazon.com/AmazonS3/latest/dev/examplebucket-policies.html



===== S3 pre-signed URLs ==========

Can generate pre-signed URLs using SDK or CLI
    For downloads 
        (easy, can use the CLI)
    For uploads 
        (harder, must use the SDK)
    


Valid for a default of 3600 seconds, 
    can change timeout with --expires-in [TIME_BY_SECONDS] argument

Users given a pre-signed URL inherit the permissions of 
    the person who generated the URL for GET / PUT

    # pre-signed URLs is by your IAM credential you are using , 
      so it will has the exact same right that your IAM user have .

Examples :
    Allow only logged-in users to download a premium video on your S3 bucket
    Allow an ever changing list of users to download files by generating URLs dynamically
    Allow temporarily a user to upload a file to a precise location in our bucket



===== VPC Endpoint Gateway for S3 ==========

                           public www
public --------> Internet  --------------->  S3 Bucket
  ec2             Gateway         |          # bucket Policy by 
                                  |            AWS:SourceIP (public IP)
private -+------>NAT Gateway -----+
 ec2     |
         |  private
         +----------> VPC Endpoint -------> S3 Bucket
                        Gateway         # bucket Policy by 
                                        - AWS:SourceVpce
                                        (one or few endpoints)
                                            or
                                        - AWS:SourceVpc
                                        (encompass all possible VPC endpoints)


===== S3 Object Lock & Glacier Vault Lock ==========

S3 Object Lock
    Adopt a WORM (Write Once Read Many) model
    Block an object version deletion for a specified amount of time

Glacier Vault Lock
    Adopt a WORM (Write Once Read Many) model
    Lock the policy for future edits (can no longer be changed)
    Helpful for compliance and data retention


