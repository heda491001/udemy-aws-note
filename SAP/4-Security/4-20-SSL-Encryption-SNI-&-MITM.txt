# Page. 98


===== SSL/TLS - Basics ==========

<SSL> refers to <Secure Sockets Layer>, 
    used to encrypt connections
<TLS> refers to <Transport Layer Security>, 
    which is a newer version 
Nowadays, 
    <TLS> certificates are mainly used, 
    but people still refer as <SSL>


Public SSL certificates are issued by Certificate Authorities (CA)
    such as 
        Comodo, Symantec, GoDaddy, 
        GlobalSign, Digicert, Letsencrypt, etc…

SSL certificates have an expiration date (you set) 
    and must be renewed


===== SSL Encryption – How it works ==========

Asymmetric Encryption is expensive (SSL)
Symmetric encryption is cheaper
Asymmetric handshake is used to exchange a per- client random symmetric key
Possibility of client sending an SSL certificate as well (two-way certificate)


---diagram----

# 1~6 is also what we called a handshake

  Client                                            Server
    |                                                 |
    |  1. Client sends hello, cipher suits & random   |
    |-----------------------------------------------> |
    |                                                 |
    |                                                 |
    |  2. Server Response with server random &        |
    |     SSL certificate (Public Key)                |
    | <-----------------------------------------------|
    |                                                 |
    |                                                 |
3. Client verifies SSL certificate                    |
    |                                                 |
    |                                                 |
    |  4. Master key (symmetric) generated and sent   |
    |     encrypted using the Public Key              |
    |-----------------------------------------------> |
    |                                                 |
    |                                                 |
    |                           5. Server verifies Client SSL cert (optional)
    |                                                 |
    |                                                 |
    |                                                 |
    |                           6. Master key is decrypted using Private Key
    |                                                 |
    |                                                 |
    |  7. Secure Symmetric Communication in Place     |
    | <---------------------------------------------> |
    |                                                 |
    |                                                 |



===== SSL – Server Name Indication (SNI) ==========

SNI solves the problem of 
    loading multiple SSL certificates onto one web server 
    (to serve multiple websites)

It’s a “newer” protocol, 
requires the client
    to indicate the hostname of the target server 
    in the initial SSL handshake


The server will then find the correct certificate, or return the default one

Note:
    Only works for ALB & NLB (newer generation), CloudFront
    Does not work for CLB (older gen)






===== SSL – Man in the Middle Attacks (MIMA) ==========

type 1.

        HTTP      * bad guy         HTTP
User <---------> Pirate Server <------------> Good Server
            (can intercept packets)
                 

type 2.


                HTTPS          * bad guy        HTTPS
User <----------------------> Pirate Server <------------> Good Server
  If infected,                  Send fake SSL cert to User          
  the user may trust the        Decrypts and re-encrypts packets
  “pirate SSL certificate”
           
                    
===== SSL – Man in the Middle Attack How to prevent ==========

-- for type 1. ------
    Don’t use public-facing HTTP, 
    use HTTPS (meaning, use SSL/TLS certificates)

-- for type 2. -------

# so one reason for type 2. is , 
    the bad guy intercepting the DNS queries , 
    so client is handshaking with the bad-guy's Private server 
    in that case , what we should do is below 

Use a DNS that has DNSSEC

To send a client to a pirate server, 
    a DNS response needs to be “forged” 
    by a server which intercepts them

It is possible to protect your domain name by configuring DNSSEC

Amazon Route 53 supports DNSSEC 
    for domain registration.

Route 53 supports DNSSEC for DNS service 
    as of December 2020 (using KMS)

You could also 
    run a custom DNS server on Amazon EC2 your own
    for example 
        (Bind is the most popular, dnsmasq, KnotDNS, PowerDNS). 
